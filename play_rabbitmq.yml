---
- name: configure /etc/hosts
  hosts: all-rabbitmq
  become: yes
  tasks:
  - name: Update /etc/hosts
    blockinfile:
      path: /etc/hosts
      create: yes
      block: |
        {% for host in groups['rabbitmq'] %}
        {{ hostvars[host].ansible_default_ipv4.address }}  {{ hostvars[host].ansible_fqdn }}  {{ hostvars[host].ansible_hostname }}
        {% endfor  %}

- name: install apt-transport-https
  hosts: rabbitmq
  tasks:
  - name: install apt-transport-https
    apt: name=apt-transport-https state=latest
    when: ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'
  become: yes

- name: configure rabbitmq-master
  hosts: rabbitmq-master
  roles:
    - { role: rockandska.erlang, become: yes }
    - { role: rockandska.rabbitmq, become: yes }

- name: configure rabbitmq-slave
  hosts: rabbitmq-slave
  roles:
    - { role: rockandska.erlang, become: yes }
    - { role: rockandska.rabbitmq, become: yes }

- name: configure cluster policies
  hosts: rabbitmq-master
  tasks:
  - name: configuring policies
    command: rabbitmqctl set_policy ha-amq ".*" '{"ha-mode":"all","ha-sync-mode":"automatic","ha-promote-on-failure":"when-synced","queue-master-locator":"min-masters"}'
  become: yes

- name: configure haproxy selinux
  hosts: haproxy_rabbitmq
  tasks:
  - name: configuring selinux
    command: setsebool -P haproxy_connect_any=1
    when: ansible_os_family == 'RedHat'
  become: yes

- name: configure haproxy server
  hosts: haproxy_rabbitmq
  roles:
    - { role: wftech.haproxy, become: yes }
