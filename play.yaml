---
- name: configure /etc/hosts
  hosts: all-postgresql
  become: yes
  tasks:
  - name: Update /etc/hosts
    blockinfile:
      path: /etc/hosts
      create: yes
      block: |
        {% for host in groups['all'] %}
        {{ hostvars[host].ansible_default_ipv4.address }}  {{ hostvars[host].ansible_fqdn }}  {{ hostvars[host].ansible_hostname }}
        {% endfor  %}

- name: configure the master redis server
  hosts: redis-master
  roles:
    - { role: davidwittman.redis, become: yes }

- name: configure redis slaves
  hosts: redis-slave
  roles:
    - { role: davidwittman.redis, become: yes }

- name: configure redis sentinel nodes
  hosts: redis-sentinel
  vars:
    - redis_sentinel_monitors:
      - name: master01
        host: "{{ groups['redis-master'][0] }}"
        port: 6379
    - redis_sentinel: True
  roles:
    - { role: davidwittman.redis, become: yes }

- name: install apt-transport-https
  hosts: rabbitmq
  tasks:
  - name: install apt-transport-https
    apt: name=apt-transport-https state=latest
    when: ansible_os_family == 'Debian'
  become: yes

- name: configure rabbitmq-master
  hosts: rabbitmq-master
  roles:
    - { role: rockandska.erlang, become: yes }
    - { role: rockandska.rabbitmq, become: yes }

- name: configure rabbitmq-slave
  hosts: rabbitmq-slave
  roles:
    - { role: rockandska.erlang, become: yes }
    - { role: rockandska.rabbitmq, become: yes }

- name: configure cluster policies
  hosts: rabbitmq-master
  tasks:
  - name: configuring policies
    command: rabbitmqctl set_policy ha-amq ".*" '{"ha-mode":"all","ha-sync-mode":"automatic","ha-promote-on-failure":"when-synced","queue-master-locator":"min-masters"}'
  become: yes

- name: configure zookeeper
  hosts: zookeeper
  roles:
    - { role: andrewrothstein.zookeeper-cluster, become: yes }

- name: install packages
  hosts: database
  become: yes
  tasks:
  - name: install packages centos-release-scl
    yum: name=centos-release-scl state=latest
    when: ansible_os_family == 'RedHat'

- name: install postgresql-servers
  hosts: database
  roles:
    - { role: kostiantyn-nemchenko.patroni, become: yes }

- name: configure haproxy selinux
  hosts: haproxy_cluster
  tasks:
  - name: configuring selinux
    command: setsebool -P haproxy_connect_any=1
    when: ansible_os_family == 'RedHat'
  become: yes

- name: configure haproxy server
  hosts: haproxy_cluster
  roles:
    - { role: wftech.haproxy, become: yes }
