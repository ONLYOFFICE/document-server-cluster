---
#  - name: Add ubuntu gpg keys
#    apt_key: keyserver={{ item.server }} id={{ item.key }} state=present
#    with_items:
#      - { server: 'keyserver.ubuntu.com', key: 'BA9EF27F', vendor: 'ubuntu' }
#    sudo: yes
 
  - name: Add onlyoffice gpg keys
    apt_key:
      url: "http://download.onlyoffice.com/repo/onlyoffice.key"
      state: present
    sudo: yes

# - name: Add repositories		
#   apt_repository: repo="{{ item }}" state=present		
#   with_items:		
#     - "deb http://archive.ubuntu.com/ubuntu precise main universe multiverse"		
#   sudo: yes

  - name: Add onlyoffice repositories
    apt_repository:
      repo: "{{ package_repo }}"
      state: present
    sudo: yes
  
  - name: Say 'yes' to ttf-mscorefonts-installer
    shell: echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections
    sudo: yes
    
  - name: Accept license
    shell: echo {{ package_name }} onlyoffice/accepted-onlyoffice-license select true | debconf-set-selections
    sudo: yes
    
  - name: Set up db host name
    shell: echo {{ package_name }} onlyoffice/db-host select {{ db_server_host }} | debconf-set-selections
#    shell: "{{ json }} -I -e 'this.services.CoAuthoring.sql.dbHost = \"{{ db_server_host }}\"'"
    when: db_server_host is defined

#  - name: Set up db port number
#    shell: echo {{ package_name }} onlyoffice/db-port select {{ db_server_port }} | debconf-set-selections
#    shell: "{{ json }} -I -e 'this.services.CoAuthoring.sql.dbPort = \"{{ db_server_port }}\"'"
#    when: db_server_port is defined

  - name: Set up db name
    shell: echo {{ package_name }} onlyoffice/db-name select {{ db_server_name }} | debconf-set-selections
#    shell: "{{ json }} -I -e 'this.services.CoAuthoring.sql.dbName = \"{{ db_server_name }}\"'"
    when: db_server_name is defined

  - name: Set up db user
    shell: echo {{ package_name }} onlyoffice/db-user select {{ db_server_user }} | debconf-set-selections
#    shell: "{{ json }} -I -e 'this.services.CoAuthoring.sql.dbUser = \"{{ db_server_user }}\"'"
    when: db_server_user is defined

  - name: Set up db user password
    shell: echo {{ package_name }} onlyoffice/db-pwd select {{ db_server_pass }} | debconf-set-selections
#    shell: "{{ json }} -I -e 'this.services.CoAuthoring.sql.dbPass = \"{{ db_server_pass }}\"'"
    when: db_server_pass is defined

  - name: Install packages
    apt: name={{ item.name }} update_cache=yes force=yes state={{ item.state }}
    with_items:
#      - { name: software-properties-common, state: present }
      - { name: "{{ package_name }}", state: latest }
    sudo: yes

  - name: Set up redis host name
    shell: "{{ json }} -I -e 'this.services.CoAuthoring.redis.host  = \"{{ redis_server_host }}\"'"
    when: redis_server_host is defined

  - name: Set up redis port number
    shell: "{{ json }} -I -e 'this.services.CoAuthoring.redis.port  = \"{{ redis_server_port }}\"'"
    when: redis_server_port is defined

  - name: Set up rabbitmq url
    shell: "{{ json }} -I -e 'this.rabbitmq.url = \"{{ rabbitmq_server_url }}\"'"
    when: rabbitmq_server_url is defined

  - name: Restart documentserver
    supervisorctl:
      name: "{{ item }}"
      state: restarted
    with_items:
    - 'onlyoffice-documentserver:converter'
    - 'onlyoffice-documentserver:docservice'
