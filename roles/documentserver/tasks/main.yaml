---
  - name: Add onlyoffice gpg keys
    apt_key:
      keyserver: "keyserver.ubuntu.com"
      id: "CB2DE8E5"
      state: present
    become: yes

  - name: Add onlyoffice repositories
    apt_repository:
      repo: "{{ package_repo }}"
      state: present
    become: yes
  
  - name: Say 'yes' to ttf-mscorefonts-installer
    debconf:
      name: ttf-mscorefonts-installer
      question: msttcorefonts/accepted-mscorefonts-eula
      value: true
      vtype: boolean
    become: yes
    
  - name: Accept license
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/accepted-onlyoffice-license
      value: 'true'
      vtype: boolean
    become: yes
    
  - name: Set up db host name
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/db-host
      value: "{{ db_server_host }}"
      vtype: string
    when: db_server_host != ""
    become: yes

  - name: Set up db name
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/db-name
      value: "{{ db_server_name }}"
      vtype: string
    when: db_server_name != ""
    become: yes

  - name: Set up db user
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/db-user
      value: "{{ db_server_user }}"
      vtype: string
    when: db_server_user != ""
    become: yes

  - name: Set up db user password
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/db-pwd
      value: "{{ db_server_pass }}"
      vtype: password
    when: db_server_pass != ""
    become: yes

  - name: Set up rabbitmq host
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/rabbitmq-host
      value: "{{ rabbitmq_server_host }}{{ rabbitmq_server_vpath }}"
      vtype: string
    when: (rabbitmq_server_host != "") and (rabbitmq_server_vpath != "")
    become: yes

  - name: Set up rabbitmq user
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/rabbitmq-user
      value: "{{ rabbitmq_server_user }}"
      vtype: string
    when: rabbitmq_server_user != ""
    become: yes

  - name: Set up rabbitmq user password
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/rabbitmq-pwd
      value: "{{ rabbitmq_server_pass }}"
      vtype: password
    when: rabbitmq_server_pass != ""
    become: yes

  - name: Set up redis host
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/redis-host
      value: "{{ redis_server_host }}"
      vtype: string
    when: redis_server_host != ""
    become: yes

  - name: Set up cluster mode
    debconf:
      name: "{{ package_name }}"
      question: onlyoffice/cluster-mode
      value: 'true'
      vtype: boolean
    become: yes

  - name: Install packages nfs-common
    apt: name=nfs-common update_cache=yes force=yes state=latest

  - name: Unmount existed filestorage
    mount:
      name: "{{ filestorage_mount_path }}"
      src: "{{ filestorage_host }}:{{ filestorage_path }}"
      fstype: "{{ filestorage_fs }}"
      state: unmounted
    when: (filestorage_host != "") and (filestorage_path != "") and (filestorage_fs != "")
    become: yes
    ignore_errors: yes

  - name: Unmount existed fonts
    mount:
      name: "{{ fonts_mount_path }}"
      src: "{{ fonts_host }}:{{ fonts_path }}"
      fstype: "{{ fonts_fs }}"
      state: unmounted
    when: (fonts_host != "") and (fonts_path != "") and (fonts_fs != "")
    become: yes
    ignore_errors: yes

  - name:  Mount fonts
    mount:
      name: "{{ fonts_mount_path }}"
      src: "{{ fonts_host }}:{{ fonts_path }}"
      fstype: "{{ fonts_fs }}"
      state: mounted
      opts: ro
    when: (fonts_host != "") and (fonts_path != "") and (fonts_fs != "")
    become: yes

  - name: Install packages
    apt: name={{ item.name }} update_cache=yes force=yes state={{ item.state }}
    with_items:
      - { name: "{{ package_name }}", state: latest }
    become: yes

  # Mount cash folder after installation ds 
  # otherwise install fails in postinstall script on chown command
  - name:  Mount filestorage
    mount:
      name: "{{ filestorage_mount_path }}"
      src: "{{ filestorage_host }}:{{ filestorage_path }}"
      fstype: "{{ filestorage_fs }}"
      state: mounted
      opts: rw
    when: (filestorage_host != "") and (filestorage_path != "") and (filestorage_fs != "")
    become: yes
