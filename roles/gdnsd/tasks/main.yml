---
- name: Ð¡heck systemd-resolv
  ansible.builtin.command: "netstat -natp | grep systemd-resolv"
  register: check_53

- name: Stop systemd-resolved
  ansible.builtin.service:
    name: systemd-resolved
    state: stopped
    enabled: false
  when: "'systemd-resolv' in check_53.stdout"

- name: Copy /etc/resolv.conf
  ansible.builtin.command: "{{ item }}"
  with_items:
    - cp /etc/resolv.conf /tmp/
    - rm -f /etc/resolv.conf
    - cp /tmp/resolv.conf /etc/
    - rm -f /tmp/resolv.conf
  when: "'systemd-resolv' in check_53.stdout"

- name: Update /etc/resolv.conf
  ansible.builtin.lineinfile:
    dest: /etc/resolv.conf
    insertbefore: BOF
    line: 'nameserver {{ gdnsd_dns_ip }}'
  when: "'systemd-resolv' in check_53.stdout"

- name: Include tasks for Debian
  ansible.builtin.include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Create a config
  ansible.builtin.template:
    src: config.j2
    dest: /etc/gdnsd/config
    mode: '0644'

- name: Create a zone
  ansible.builtin.template:
    src: zone.j2
    dest: /etc/gdnsd/zones/{{ gdnsd_domain_name }}
    mode: '0644'
  notify:
    - Restart GDNSD

- name: Edit /etc/resolv.conf
  ansible.builtin.lineinfile:
    dest: /etc/resolv.conf
    insertbefore: BOF
    line: >
      nameserver 127.0.0.1
      {% for host in groups['documentservers'] %}
      {% if hostvars[host].ansible_os_family == 'Debian' %}
      nameserver {{ hostvars[host].ansible_default_ipv4.address }}
      {% endif %}
      {% endfor %}

- name: Delete {{ ansible_default_ipv4.address }} from /etc/resolv.conf
  ansible.builtin.lineinfile:
    dest: /etc/resolv.conf
    regexp: "{{ item.reg }}"
    state: "{{ item.state }}"
  with_items:
    - { reg: "{{ ansible_default_ipv4.address }}", state: "absent" }
    - { reg: "{{ gdnsd_dns_ip }}", state: "absent" }

- name: Add nameserver {{ gdnsd_dns_ip }} to /etc/resolv.conf
  ansible.builtin.lineinfile:
    path: /etc/resolv.conf
    insertafter: '^nameserver'
    line: 'nameserver {{ gdnsd_dns_ip }}'
